

# the walk function returns a tuple of 3 values (directory:str, subDirectories:array, filenames in this directory:array) for each directory in the path

# a case to keep in mind is that it can return an empty array for the filename if it only contains directories

# for dirpath, dirnames, filenames in os.walk('.'):
    # print('Current Path:', dirpath)
    # print('Directories:', dirnames)
    # print('Files:', filenames)
    # print()

Current Path: .
Directories: ['test', 'fileOne']
Files: ['main.py']

Current Path: ./test
Directories: []
Files: ['flag.txt']

Current Path: ./fileOne
Directories: ['FileTwo']
Files: ['first.txt']

Current Path: ./fileOne/FileTwo
Directories: ['fileThree']
Files: ['second.txt']

Current Path: ./fileOne/FileTwo/fileThree
Directories: []
Files: ['thirdFlag.txt']



# fuzzy string matching, so we can take a string and see if it is contained in another string but not exactly

# we can use a tuple withe multiple strings to match against with one of them rather than having to do multiple if statements